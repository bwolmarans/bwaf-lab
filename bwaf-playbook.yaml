- hosts: vm_ubuntu*

  tasks:
    - name: housekeeping
      set_fact:
        vm_ubuntu_private_ip="{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
#"
    - debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']
    - debug: var=vm_ubuntu_private_ip
    - name: "Save private ip to dummy host"
      add_host:
       name:   "dummy_host"
       ip:  "{{ vm_ubuntu_private_ip }}"
   
    - name: update
      command: apt-get update
      ignore_errors: yes
      become: yes
 
    - name: install docker
      command: apt-get --yes --force-yes install docker.io
      ignore_errors: yes
      become: yes

    - name: run dvwa in docker container
      command: docker run -d --rm -it -p 8080:80 vulnerables/web-dvwa
      ignore_errors: yes
      become: yes

- hosts: vm_bwaf*
  connection: local

#  vars_prompt:
#
#  - name: "hostname"
#    prompt: "Enter the waf hostname:"
#    private: no
#    default: "bwaf-tf.escapefromthe.net:8000"
#
#  - name: "username"
#    prompt: "Enter the BWAF username:"
#    private: no
#    default: "admin"
#   
#  - name: "password"
#    prompt: "Enter the account password:"
#    private: no
#    default: "Hello123456!"
#
  vars:
    username: "admin"
    password: "Hello123456!"
    bwafport: '8000'
    api_version: 'v3.1'
    vm_bwaf_private_ip: "{{private_ipv4_addresses | join }}"
    vm_bwaf_public_ip: "{{ public_ipv4_addresses | join }}"
    vm_ubuntu_private_ip: "{{ hostvars['dummy_host']['ip'] }}"
    api_url: "http://{{ vm_bwaf_public_ip }}:8000/restapi/{{ api_version }}"
#"

#
# Leaving this in as an example, not necessary as can be injected in 
#
#    - name: accept bwaf payg license agreement
#      uri:
#        url: 'http://{{hostname}}'
#        body: {"name_sign":"studentforlife","email_sign":"student%40barracuda.com","company_sign":"barracuda","eula_hash_val":"ed4480205f84cde3e6bdce0c987348d1d90de9db","action":"save_signed_eula"}
#        method: POST
#        body_format: form-urlencoded
#        status_code: [200, 405]
#      delegate_to: localhost
#    - pause:
#        minutes: 2


  tasks:
    
    - name: debuggingstuff
      debug: 
        msg: |
         {{ vm_bwaf_private_ip }}
         {{ vm_bwaf_public_ip }}
         {{ api_url }}
         {{ vm_ubuntu_private_ip }}

    - name: login to waf api
      uri:
        url: '{{ api_url }}/login'
        body: {"username":"{{ username }}","password":"{{ password }}"}
        method: POST
        body_format: json
      delegate_to: localhost
      register: mytoken
    - debug: var=mytoken.json.token

    - name: add a frontend service
      uri:
        url: '{{ api_url }}/services/'
        method: POST
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
        body_format: json
        body: { "address-version": "IPv4", "app-id": "dvwa_app_id", "ip-address": "{{ vm_bwaf_private_ip }}", "name": "dvwa_service", "port": 80, "status": "On", "type": "HTTP"}
        status_code: 201
      delegate_to: localhost
      ignore_errors: yes

    - name: add a backend server 
      uri:
        url: '{{ api_url }}/services/dvwa_service/servers'
        method: POST
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
        body_format: json
        body: { "address-version": "IPv4", "ip-address": "{{ vm_ubuntu_private_ip }}", "port": 8080, "status": "In Service", "identifier": "IP Address", "name": "dvwa-server", "hostname": "dvwa-server"}
        status_code: 201
      ignore_errors: yes

    - name: get all services
      uri:
        url: '{{ api_url }}/services/'
        method: GET
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
      delegate_to: localhost
      register: user_info
    - debug: var=user_info


    - name: get service port
      uri:
        url: "{{ api_url }}/services/dvwa_service?groups=Service&parameters=port"
        method: GET
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
      delegate_to: localhost
      register: user_info
    - debug: var=user_info


    - name: change service port to 999
      uri:
        url: "{{ api_url }}/services/dvwa_service"
        headers:
          Content-type: application/json
          Accept: application/json
        body: {"port":"999"}
        method: PUT
        body_format: json
        user: '{{mytoken.json.token}}'
        force_basic_auth: yes
      delegate_to: localhost
      register: user_info
    - debug: var=user_info


    - name: get service port
      uri:
        url: "{{ api_url }}/services/dvwa_service?groups=Service&parameters=port"
        method: GET
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
      delegate_to: localhost
      register: user_info


    - name: change service port to 80
      uri:
        url: "{{ api_url }}/services/dvwa_service"
        headers:
          Content-type: application/json
          Accept: application/json
        body: {"port":"80"}
        method: PUT
        body_format: json
        user: '{{mytoken.json.token}}'
        force_basic_auth: yes
      delegate_to: localhost
      register: user_info
    - debug: var=user_info


    - name: get service port
      uri:
        url: "{{ api_url }}/services/dvwa_service?groups=Service&parameters=port"
        method: GET
        headers:
          Content-type: application/json
          Accept: application/json
        force_basic_auth: yes
        user: '{{mytoken.json.token}}'
      delegate_to: localhost
      register: user_info

